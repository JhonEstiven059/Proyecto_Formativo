// <auto-generated />
using System;
using CrudDF3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrudDF3.Migrations
{
    [DbContext(typeof(CrudDf3Context))]
    partial class CrudDf3ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CrudDF3.Models.Habitacione", b =>
                {
                    b.Property<int>("IdHabitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHabitacion"));

                    b.Property<int?>("CapacidadHuespedes")
                        .HasColumnType("int");

                    b.Property<string>("CaracteristicasHabitacion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescripcionHabitacion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("EstadoHabitacion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TarifaHabitacion")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TipoHabitacion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdHabitacion")
                        .HasName("PK__Habitaci__8BBBF901AB9F734A");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("CrudDF3.Models.Huespede", b =>
                {
                    b.Property<int>("IdHuesped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHuesped"));

                    b.Property<string>("ApellidoHuesped")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CedulaHuesped")
                        .HasColumnType("int");

                    b.Property<string>("CorreoHuesped")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaEntradaHuesped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaSalidaHuesped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreHuesped")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdHuesped")
                        .HasName("PK__Huespede__939EC061ADE6E85D");

                    b.HasIndex(new[] { "CedulaHuesped" }, "UQ__Huespede__0768FF19E7789242")
                        .IsUnique()
                        .HasFilter("[CedulaHuesped] IS NOT NULL");

                    b.ToTable("Huespedes");
                });

            modelBuilder.Entity("CrudDF3.Models.PaquetesTuristico", b =>
                {
                    b.Property<int>("IdPaquete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaquete"));

                    b.Property<string>("DescripcionPaquete")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DestinoPaquete")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("DisponibilidadPaquete")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoPaquete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaPaquete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombrePaquete")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("PrecioPaquete")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TipoViajePaquete")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPaquete")
                        .HasName("PK__Paquetes__DE278F8BC5B27D15");

                    b.ToTable("PaquetesTuristicos");
                });

            modelBuilder.Entity("CrudDF3.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<string>("DescripcionPermiso")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool?>("EstadoPermiso")
                        .HasColumnType("bit");

                    b.Property<string>("NombrePermiso")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdPermiso")
                        .HasName("PK__Permisos__0D626EC8F5BC11E4");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("CrudDF3.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<decimal?>("Anticipo")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool?>("EstadoReserva")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicial")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdHabitacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdHuesped")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroPersonas")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdReserva")
                        .HasName("PK__Reservas__0E49C69D89631E9E");

                    b.HasIndex("IdHabitacion");

                    b.HasIndex("IdHuesped");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("CrudDF3.Models.ReservasPaquete", b =>
                {
                    b.Property<int>("IdReservaPaquete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservaPaquete"));

                    b.Property<int?>("IdPaquete")
                        .HasColumnType("int");

                    b.Property<int?>("IdReserva")
                        .HasColumnType("int");

                    b.HasKey("IdReservaPaquete")
                        .HasName("PK__Reservas__BF8B0A63F8F0C1E4");

                    b.HasIndex("IdPaquete");

                    b.HasIndex("IdReserva");

                    b.ToTable("ReservasPaquetes");
                });

            modelBuilder.Entity("CrudDF3.Models.ReservasServicio", b =>
                {
                    b.Property<int>("IdReservaServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservaServicio"));

                    b.Property<int?>("IdReserva")
                        .HasColumnType("int");

                    b.Property<int?>("IdServicio")
                        .HasColumnType("int");

                    b.HasKey("IdReservaServicio")
                        .HasName("PK__Reservas__B3FBC74775C2BC63");

                    b.HasIndex("IdReserva");

                    b.HasIndex("IdServicio");

                    b.ToTable("ReservasServicios");
                });

            modelBuilder.Entity("CrudDF3.Models.RolPermiso", b =>
                {
                    b.Property<int>("IdRolPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolPermiso"));

                    b.Property<int?>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("IdRolPermiso")
                        .HasName("PK__Rol_Perm__0CC73B1B42B0CBAB");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdRol");

                    b.ToTable("Rol_Permisos", (string)null);
                });

            modelBuilder.Entity("CrudDF3.Models.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("DescripcionRol")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool?>("EstadoRol")
                        .HasColumnType("bit");

                    b.Property<string>("NombreRol")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdRol")
                        .HasName("PK__Roles__2A49584CE39A91C8");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CrudDF3.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Costo")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("Disponibilidad")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoServicio")
                        .HasColumnType("bit");

                    b.Property<string>("NombreServicio")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoServicio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdServicio")
                        .HasName("PK__Servicio__2DCCF9A2CE3B0E14");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("CrudDF3.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("ApellidoUsuario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CedulaUsuario")
                        .HasColumnType("int");

                    b.Property<string>("ContraseñaUsuario")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CorreoUsuario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("EstadoUsuario")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuarios__5B65BF97174312CC");

                    b.HasIndex("IdRol");

                    b.HasIndex(new[] { "CorreoUsuario" }, "UQ__Usuarios__36549878C06394A4")
                        .IsUnique()
                        .HasFilter("[CorreoUsuario] IS NOT NULL");

                    b.HasIndex(new[] { "CedulaUsuario" }, "UQ__Usuarios__C0B559BD364A57C5")
                        .IsUnique()
                        .HasFilter("[CedulaUsuario] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CrudDF3.Models.Reserva", b =>
                {
                    b.HasOne("CrudDF3.Models.Habitacione", "IdHabitacionNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdHabitacion")
                        .HasConstraintName("FK__Reservas__IdHabi__628FA481");

                    b.HasOne("CrudDF3.Models.Huespede", "IdHuespedNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdHuesped")
                        .HasConstraintName("FK__Reservas__IdHues__619B8048");

                    b.HasOne("CrudDF3.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Reservas__IdUsua__60A75C0F");

                    b.Navigation("IdHabitacionNavigation");

                    b.Navigation("IdHuespedNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("CrudDF3.Models.ReservasPaquete", b =>
                {
                    b.HasOne("CrudDF3.Models.PaquetesTuristico", "IdPaqueteNavigation")
                        .WithMany("ReservasPaquetes")
                        .HasForeignKey("IdPaquete")
                        .HasConstraintName("FK__ReservasP__IdPaq__778AC167");

                    b.HasOne("CrudDF3.Models.Reserva", "IdReservaNavigation")
                        .WithMany("ReservasPaquetes")
                        .HasForeignKey("IdReserva")
                        .HasConstraintName("FK__ReservasP__IdRes__76969D2E");

                    b.Navigation("IdPaqueteNavigation");

                    b.Navigation("IdReservaNavigation");
                });

            modelBuilder.Entity("CrudDF3.Models.ReservasServicio", b =>
                {
                    b.HasOne("CrudDF3.Models.Reserva", "IdReservaNavigation")
                        .WithMany("ReservasServicios")
                        .HasForeignKey("IdReserva")
                        .HasConstraintName("FK__ReservasS__IdRes__72C60C4A");

                    b.HasOne("CrudDF3.Models.Servicio", "IdServicioNavigation")
                        .WithMany("ReservasServicios")
                        .HasForeignKey("IdServicio")
                        .HasConstraintName("FK__ReservasS__IdSer__73BA3083");

                    b.Navigation("IdReservaNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("CrudDF3.Models.RolPermiso", b =>
                {
                    b.HasOne("CrudDF3.Models.Permiso", "IdPermisoNavigation")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdPermiso")
                        .HasConstraintName("FK__Rol_Permi__IdPer__68487DD7");

                    b.HasOne("CrudDF3.Models.Role", "IdRolNavigation")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Rol_Permi__IdRol__6754599E");

                    b.Navigation("IdPermisoNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("CrudDF3.Models.Usuario", b =>
                {
                    b.HasOne("CrudDF3.Models.Role", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuarios__IdRolU__5070F446");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("CrudDF3.Models.Habitacione", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("CrudDF3.Models.Huespede", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("CrudDF3.Models.PaquetesTuristico", b =>
                {
                    b.Navigation("ReservasPaquetes");
                });

            modelBuilder.Entity("CrudDF3.Models.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("CrudDF3.Models.Reserva", b =>
                {
                    b.Navigation("ReservasPaquetes");

                    b.Navigation("ReservasServicios");
                });

            modelBuilder.Entity("CrudDF3.Models.Role", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CrudDF3.Models.Servicio", b =>
                {
                    b.Navigation("ReservasServicios");
                });

            modelBuilder.Entity("CrudDF3.Models.Usuario", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
